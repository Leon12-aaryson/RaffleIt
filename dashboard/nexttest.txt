<?php
// Assume you have a database connection established
$pdo = new PDO('mysql:host=localhost;dbname=raffleitapp', 'root', '');

// Replace this with your actual SQL query to retrieve product details
$id = 1; // Replace with the actual product ID you want to fetch
$stmt = $pdo->prepare("SELECT hostname, reason FROM raffles WHERE id = :id");
$stmt->bindParam(':id', $id, PDO::PARAM_INT);
$stmt->execute();

// Fetch the product data from the database
$raffles = $stmt->fetch(PDO::FETCH_ASSOC);

require_once 'vendor/autoload.php'; // Include the Stripe PHP library
$stripe = new \Stripe\StripeClient('sk_test_51NsCs7DbArZGnKh33hoGr9l0jwDXylUvr6SWsjGPOGWgxBf4mCAw5s8V9uvYTohsvhlHsNuDgLE2i1dCJtMhSVQe00SXfwWqyf');
header('Content-Type: application/json');

if ($raffles) {
    $hostname = $raffles['hostname'];
    $reason = $raffles['reason'];
    if (!empty($reason)) {
        // Create a Stripe checkout session with the retrieved product data
        $checkout_session = $stripe->checkout->sessions->create([
            'line_items' => [[
                'price_data' => [
                    'currency' => 'usd',
                    'product_data' => [
                        'name' => $raffles->$reason, // Product name from the database
                    ],
                    'unit_amount' => 100 * 100, // Convert price to cents
                ],
                'quantity' => 1, // Number of items to purchase
            ]],
            'mode' => 'payment', // Payment mode
            'success_url' => 'http://localhost:4242/success', // Redirect URL after successful payment
            'cancel_url' => 'http://localhost:4242/cancel', // Redirect URL if the user cancels the payment
        ]);
    } else {
        // Handle the case where the product name is empty
        echo "Product name is empty. Please provide a valid product name.";
    }
} else {
    echo "No raffle items available at the moment. Please check back later.";
    // Handle the case where the product with the specified ID was not found in the database
}
